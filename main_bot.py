import telebot
from telebot import types

token = 'YOUR-BOT-TOKEN'
bot = telebot.TeleBot(token)
telebot.apihelper.proxy = {'https': 'socks5://userproxy:password@ip:port'}


threads_bot = []
main_bot_stat = []
users = []
payments = []
promos = []
requests = []
sent_requests = []


def get_stat_for_today():
    today = datetime.datetime.today().strftime('%d.%m.%Y')
    main_bot_stat.append({})
    main_bot_stat_count = len(main_bot_stat) - 1
    users_count = len(users) - 1
    payments_count = len(users) - 1
    promos_count = len(promos) - 1
    requests_count = len(requests) - 1
    sent_requests_count = len(sent_requests) - 1

    main_bot_stat[main_bot_stat_count]['day'] = today
    main_bot_stat[main_bot_stat_count]['users_count'] = users_count
    main_bot_stat[main_bot_stat_count]['payments_count'] = payments_count
    main_bot_stat[main_bot_stat_count]['promos_count'] = promos_count
    main_bot_stat[main_bot_stat_count]['requests_count'] = requests_count
    main_bot_stat[main_bot_stat_count]['sent_requests_count'] = sent_requests_count


@bot.message_handler(commands=['start'])
def handle_start(message):
    language = message.from_user.language_code
    user_id = message.from_user.id
    username = message.from_user.username

    users.append({})
    users_count = len(users) - 1
    users[users_count]['user_id'] = user_id
    users[users_count]['username'] = username
    users[users_count]['language'] = language

    hello_msg = "–Ø –ø–æ–º–æ–≥–∞—é –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —á–µ—Ä–µ–∑ —á–∞—Ç—ã. \n" \
                "\n" \
                "–ù–∞–ø–æ–º–∏–Ω–∞—é –Ω—É–∂–Ω—ã–º –ª—é–¥—è–º –≤ –Ω—É–∂–Ω—ã–µ –¥–Ω–∏ –æ —Ç–æ–º, —á—Ç–æ –∏–º –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å. " \
                "–ü–æ–ø—Ä–æ–±—É–π –º–µ–Ω—è –∏ –Ω–∞–ø–∏—à–∏ @alantsoff –æ–±–æ –º–Ω–µ –æ—Ç–∑—ã–≤."
    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text="–ü–û–ï–•–ê–õ–ò", callback_data="newbot")
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text="–í–í–ï–°–¢–ò –ù–ò–ö–ù–ï–ô–ú –¢–û–ì–û, –ö–¢–û –í–ê–° –ü–†–ò–ì–õ–ê–°–ò–õ", callback_data="set_refer")
    keyboard.add(callback_button)
    bot.send_message(message.chat.id, hello_msg, reply_markup=keyboard, parse_mode='html')


@bot.callback_query_handler(func=lambda call: call.data == 'newbot')
def callback_inline(call):
    msg = '1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –±–æ—Ç @BotFather –∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –±–æ—Ç. \n' \
          '2. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (–≤—ã–≥–ª—è–¥–∏—Ç –≤–æ—Ç —Ç–∞–∫ ‚Äì ' \
          '<code>123456:ABC-DEF1234gh...</code>) ‚Äì ' \
          '—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å—é–¥–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ.'

    sent_msg = bot.send_message(call.message.chat.id, msg, parse_mode='html')
    bot.register_next_step_handler(sent_msg, handle_token)


@bot.message_handler(commands=['cab'])
def personal(message):
    msg = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç! \n' \
          '\n' \
          '–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–ø–ª–∞—Ç–µ –∏ —Å–≤–æ–∏–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–º. \n ' \
          '\n' \
          '–°–µ–π—á–∞—Å —Ç–≤–æ–π —Å—Ç–∞—Ç—É—Å: üö´ –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–π \n' \
          '\n' \
          '–¢–≤–æ–π –±–æ—Ç:'
    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text='–û–ü–õ–ê–¢–ê', callback_data='payment')
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–ú–û–ò –†–ï–§–ï–†–ê–õ–´', callback_data='refer')
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–í–í–ï–°–¢–ò –ü–†–û–ú–û–ö–û–î', callback_data='promo')
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–°–¢–ê–¢–ò–°–¢–ò–ö–ê', callback_data='stat')
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–°–ü–†–ê–í–ö–ê', callback_data='help')
    keyboard.add(callback_button)
    bot.send_message(message.chat.id, msg, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == 'cab')
def personal_from_callback(call):
    message = call.message
    msg = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç! \n' \
          '\n' \
          '–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–ø–ª–∞—Ç–µ –∏ —Å–≤–æ–∏–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–º. \n ' \
          '\n' \
          '–°–µ–π—á–∞—Å —Ç–≤–æ–π —Å—Ç–∞—Ç—É—Å: üö´ –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–π \n' \
          '\n' \
          '–¢–≤–æ–π –±–æ—Ç:'
    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text='–ú–û–ò –†–ê–°–°–´–õ–ö–ò', callback_data='requests')
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–û–ü–õ–ê–¢–ê', callback_data='payment')
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–ú–û–ò –†–ï–§–ï–†–ê–õ–´', callback_data='refer')
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–í–í–ï–°–¢–ò –ü–†–û–ú–û–ö–û–î', callback_data='promo')
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–°–¢–ê–¢–ò–°–¢–ò–ö–ê', callback_data='stat')
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–°–ü–†–ê–í–ö–ê', callback_data='help')
    keyboard.add(callback_button)
    bot.send_message(message.chat.id, msg, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: 'payment' in call.data)
def callback_inline(call):
    user_id = str(call.message.from_user.id)
    print(user_id)
    payments.append({})
    payments_count = len(users) - 1
    payments[payments_count]['user_id'] = user_id
    payments[payments_count]['username'] = str(call.message.from_user.username)

    if call.data[7:]:
        sub = call.data[8:]
        sub_months = sub[0:2] if "_" not in sub[0:2] else sub[0:1]
        print(sub_months)
        if sub_months == '1':
            price = '249'
            payments[payments_count]['price'] = price
            msg = '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã. ' \
                  '–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 30 –º–∏–Ω—É—Ç.' \
                  '–ù–µ –º–µ–Ω—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ. ' \
                  '–ü–æ—Å–ª–µ –µ–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞.'
            qiwi_pay_url = 'https://qiwi.com/payment/form/99?amountFraction=0.0&currency=RUB&extra%5B%27account%27%5D=79258550898&extra%5B%27comment%27%5D=' + user_id + '&amountInteger=' + price
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='payment_success',
                                                         url=qiwi_pay_url)
            keyboard.add(callback_button)
            callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
            keyboard.add(callback_button)
            bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)
        elif sub_months == '3':
            price = '597.6'

            payments[payments_count]['price'] = price
            msg = '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã. ' \
                  '–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 30 –º–∏–Ω—É—Ç.' \
                  '–ù–µ –º–µ–Ω—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ. ' \
                  '–ü–æ—Å–ª–µ –µ–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞.'
            qiwi_pay_url = 'https://qiwi.com/payment/form/99?amountFraction=0.0&currency=RUB&extra%5B%27account%27%5D=79258550898&extra%5B%27comment%27%5D=' + user_id + '&amountInteger=' + price
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='payment_success',
                                                         url=qiwi_pay_url)
            keyboard.add(callback_button)
            callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
            keyboard.add(callback_button)
            bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)
        elif sub_months == '6':
            price = '1045.8'

            payments[payments_count]['price'] = price
            msg = '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã. ' \
                  '–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 30 –º–∏–Ω—É—Ç.' \
                  '–ù–µ –º–µ–Ω—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ. ' \
                  '–ü–æ—Å–ª–µ –µ–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞.'
            qiwi_pay_url = 'https://qiwi.com/payment/form/99?amountFraction=0.0&currency=RUB&extra%5B%27account%27%5D=79258550898&extra%5B%27comment%27%5D=' + user_id + '&amountInteger=' + price
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='payment_success',
                                                         url=qiwi_pay_url)
            keyboard.add(callback_button)
            callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
            keyboard.add(callback_button)
            bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)
        elif sub_months == '12':
            price = '1792.8'

            payments[payments_count]['price'] = price
            msg = '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã. ' \
                  '–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 30 –º–∏–Ω—É—Ç.' \
                  '–ù–µ –º–µ–Ω—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ. ' \
                  '–ü–æ—Å–ª–µ –µ–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞.'
            qiwi_pay_url = 'https://qiwi.com/payment/form/99?amountFraction=0.0&currency=RUB&extra%5B%27account%27%5D=79258550898&extra%5B%27comment%27%5D=' + user_id + '&amountInteger=' + price
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='payment_success',
                                                         url=qiwi_pay_url)
            keyboard.add(callback_button)
            callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
            keyboard.add(callback_button)
            bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)
        elif sub_months == 'un':
            price = '4500'

            payments[payments_count]['price'] = price
            msg = '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã. ' \
                  '–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 30 –º–∏–Ω—É—Ç.' \
                  '–ù–µ –º–µ–Ω—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ. ' \
                  '–ü–æ—Å–ª–µ –µ–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –≤–∞–º –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞.'

            qiwi_pay_url = 'https://qiwi.com/payment/form/99?amountFraction=0.0&currency=RUB&extra%5B%27account%27%5D=79258550898&extra%5B%27comment%27%5D=' + user_id + '&amountInteger=' + price
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', callback_data='payment_success',
                                                         url=qiwi_pay_url)
            keyboard.add(callback_button)
            callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
            keyboard.add(callback_button)
            bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)
    else:
        msg = '–ê –º–æ–∂–Ω–æ –Ω–µ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å :) \n' \
              '\n' \
              '–í—ã –∏ –≤–∞—à –¥—Ä—É–≥ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–æ 1 –º–µ—Å—è—Ü—É —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞, ' \
              '–µ—Å–ª–∏ –≤–∞—à –¥—Ä—É–≥ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥—ë—Ç –≤–∞—à –ª–æ–≥–∏–Ω –∏ –æ–ø–ª–∞—Ç–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –º–µ—Å—è—Ü.'
        keyboard = types.InlineKeyboardMarkup()
        callback_button = types.InlineKeyboardButton(text='1 –º–µ—Å—è—Ü - —Å–∫–∏–¥–∫–∞ 0%', callback_data='payment_1_month')
        keyboard.add(callback_button)
        callback_button = types.InlineKeyboardButton(text='3 –º–µ—Å—è—Ü–∞ - —Å–∫–∏–¥–∫–∞ 20%', callback_data='payment_3_months')
        keyboard.add(callback_button)
        callback_button = types.InlineKeyboardButton(text='6 –º–µ—Å—è—Ü–µ–≤ - —Å–∫–∏–¥–∫–∞ 30%', callback_data='payment_6_months')
        keyboard.add(callback_button)
        callback_button = types.InlineKeyboardButton(text='12 –º–µ—Å—è—Ü–µ–≤ - —Å–∫–∏–¥–∫–∞ 40%', callback_data='payment_12_months')
        keyboard.add(callback_button)
        callback_button = types.InlineKeyboardButton(text='–ë–µ–∑–ª–∏–º–∏—Ç', callback_data='payment_unlimited')
        keyboard.add(callback_button)
        callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
        keyboard.add(callback_button)

        bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == 'refer')
def callback_inline(call):
    refer_count = 0
    promos.append({})
    promos.count = len(promos) - 1
    msg = '–í—ã –∏ –≤–∞—à –¥—Ä—É–≥ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–æ 1 –º–µ—Å—è—Ü—É —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞, –µ—Å–ª–∏ ' \
          '–≤–∞—à –¥—Ä—É–≥ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥—ë—Ç –≤–∞—à –ª–æ–≥–∏–Ω –∏ –æ–ø–ª–∞—Ç–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –º–µ—Å—è—Ü. \n' \
          '\n' \
          '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö: ' + str(refer_count)

    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
    keyboard.add(callback_button)

    bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == 'promo')
def callback_inline(call):
    msg = '–ü—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ–Ω—É—Å–æ–≤:'

    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
    keyboard.add(callback_button)

    sent_msg = bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)
    bot.register_next_step_handler(sent_msg, set_promo)


def set_promo(msg):
    promo_succ_msg = '–ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'
    promo_unsucc_msg = '–£ –í–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞'
    bot.send_message(msg.chat.id, promo_succ_msg)


@bot.callback_query_handler(func=lambda call: call.data == 'help')
def callback_inline(call):
    msg = '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å—Å—ã–ª–∫–µ: https://clck.ru/H8HeE \n' \
          '\n' \
          '–û—Ç–∫—Ä—ã—Ç—ã–π —á–∞—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è –∏ —Ä–µ—à–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤: \n' \
          'https://t.me/joinchat/AAGeRBZPliIGwdcIcmqM0Q \n' \
          '\n' \
          '–ï—Å–ª–∏ –±—É–¥—É—Ç —Å–µ—Ä—å–µ–∑–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏—Ç–µ –º–Ω–µ –Ω–∞–ø—Ä—è–º—É—é @alantsoff'

    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
    keyboard.add(callback_button)

    bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == 'stat')
def callback_inline(call):
    msg = '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:'
    sheet_url = ''
    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å', callback_data='show_stat', url=sheet_url)
    keyboard.add(callback_button)
    callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
    keyboard.add(callback_button)

    bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)


def handle_token(message):
    # message_text = int(''.join(message.text.split()))
    print('hello im here')
    new_bot_token = ''.join(message.text).split()[0]
    if len(new_bot_token) == 45:
        try:
            _bot_info = telebot.TeleBot(new_bot_token).get_me()
            bot_info = dict()
            bot_info['owner_id'] = str(message.from_user.id)
            bot_info['bot_id'] = str(_bot_info.id)
            bot_info['bot_username'] = '@' + str(_bot_info.username)
            print(bot_info)
            threads_bot.append({})
            threads_bot_count = len(threads_bot) - 1
            threads_bot[threads_bot_count]['target'] = new_bot
            threads_bot[threads_bot_count]['args'] = [new_bot_token]
            print(threads_bot[threads_bot_count]['args'])
            print(len(threads_bot[threads_bot_count]['args']))
            threads_bot[threads_bot_count]['name'] = str(bot_info['bot_username'])
            threads_bot[threads_bot_count]['daemon'] = True
            new_bot_thread = th.Thread(target=threads_bot[threads_bot_count]['target'], name=threads_bot[threads_bot_count]['name'], args=(threads_bot[threads_bot_count]['args']), daemon=threads_bot[threads_bot_count]['daemon'])
            new_bot_thread.start()
            # new_bot(new_bot_token)
            bot.send_message(message.chat.id, '–ë–æ—Ç ' + bot_info['bot_username'] + ' —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!', parse_mode='html')
        except:
            bot.send_message(message.chat.id,
                             '–£–ø—Å... —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å —Ç–æ–∫–µ–Ω–æ–º :( \n –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ, –µ—Å–ª–∏ —ç—Ç–∞ –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ —Å–Ω–æ–≤–∞ ‚Äî –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ @BotFather –∏ –ø–µ—Ä–µ–≤—ã–ø—É—Å—Ç–∏—Ç–µ —Ç–æ–∫–µ–Ω –∫–æ–º–∞–Ω–¥–æ–π /revoke, –∞ –ø–æ—Ç–æ–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –º–Ω–µ.',
                             parse_mode='html')


    else:
        bot.send_message(message.chat.id, '–£–ø—Å... —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å —Ç–æ–∫–µ–Ω–æ–º :( \n –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ, –µ—Å–ª–∏ —ç—Ç–∞ –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ —Å–Ω–æ–≤–∞ ‚Äî –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ @BotFather –∏ –ø–µ—Ä–µ–≤—ã–ø—É—Å—Ç–∏—Ç–µ —Ç–æ–∫–µ–Ω –∫–æ–º–∞–Ω–¥–æ–π /revoke, –∞ –ø–æ—Ç–æ–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –º–Ω–µ.', parse_mode='html')


@bot.callback_query_handler(func=lambda call: call.data == 'set_refer')
def callback_inline(call):
    msg = '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ –æ–¥–Ω–æ–≥–æ ' \
          '–±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞:'

    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cab')
    keyboard.add(callback_button)

    sent_msg = bot.send_message(call.message.chat.id, msg, parse_mode='html', reply_markup=keyboard)
    bot.register_next_step_handler(sent_msg, set_refer)


def set_refer(message):
    msg = '–í–∞–º –∏ –í–∞—à–µ–º—É –¥—Ä—É–≥—É —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å!'

    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text='–°–û–ó–î–ê–¢–¨ –ë–û–¢–ê', callback_data='newbot')
    keyboard.add(callback_button)

    bot.send_message(message.chat.id, msg, reply_markup=keyboard)


if __name__ == '__main__':
    bot.polling(none_stop=True)
